# -*- coding: utf-8 -*-
"""ping_simples.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NhwOqIX677HT1zpVyIgrKiLAgkIruPXd

# Segurança de Informação com Python - Ping Simples
Digital Innovation One - Instrutor Bruno Dias
Aluna: Mirian Ajiki Molicawa
"""

# importação da biblioteca para integrar os programas e recurso do Sistema Operacional.

import os

# Criação da variável para receber o host ou IP no qual será executado o ping

ip_ou_host = input("Digite o IP ou Host a ser verificado: ")

# ping www.google.com

# Disparando www.google.com [2800:3f0:4001:827::2004] com 32 bytes de dados:
# Resposta de 2800:3f0:4001:827::2004: tempo=40ms
# Resposta de 2800:3f0:4001:827::2004: tempo=41ms
# Resposta de 2800:3f0:4001:827::2004: tempo=43ms
# Resposta de 2800:3f0:4001:827::2004: tempo=40ms

# Estatísticas do Ping para 2800:3f0:4001:827::2004:
#    Pacotes: Enviados = 4, Recebidos = 4, Perdidos = 0 (0% de
#             perda),
# Aproximar um número redondo de vezes em milissegundos:
#    Mínimo = 40ms, Máximo = 43ms, Média = 41ms

# Criação da variável para receber o host ou IP no qual será executado o ping

ip_ou_host = input("Digite o IP ou Host a ser verificado: ")

# Executar o método para que a biblioteca os execute os comandos internos do sistema Ex. ping limitando o parâmetro com 6 e formatando a variável

os.system('ping -n 6 {}'.format(ip_ou_host))

# ping 8.8.8.8
# Disparando 8.8.8.8 com 32 bytes de dados:
# Resposta de 8.8.8.8: bytes=32 tempo=43ms TTL=116
# Resposta de 8.8.8.8: bytes=32 tempo=43ms TTL=116
# Resposta de 8.8.8.8: bytes=32 tempo=42ms TTL=116
# Resposta de 8.8.8.8: bytes=32 tempo=42ms TTL=116
# Resposta de 8.8.8.8: bytes=32 tempo=43ms TTL=116
# Resposta de 8.8.8.8: bytes=32 tempo=44ms TTL=116
# 
# Estatísticas do Ping para 8.8.8.8:
#    Pacotes: Enviados = 6, Recebidos = 6, Perdidos = 0 (0% de
#             perda),
# Aproximar um número redondo de vezes em milissegundos:
#    Mínimo = 42ms, Máximo = 44ms, Média = 42ms

# Impressão do símbolo # 60 vezes
print("#" * 60)

